#!/usr/local/bin/node

var fork = require('child_process').fork;
var fs = require('fs');
var path = require('path');

var colors = require('colors');
var _ = require('lodash');
var server;

// Internal method to start server, throttled to 1 sec
var _startServer = _.debounce(function() {
  server = fork(__dirname+'/../lib/server.js');
}, 1000);

// Boot service
function bootServer() {
  if(server) {
    server.kill('SIGKILL');
    server.once('close', function() {
      _startServer();
    });
    server.once('error', function(e) {
      console.log('Encountered error');
      console.log(e.stack || e);
      process.exit(2);
    });
    return;
  }

  _startServer();
}

// Internal watch asset folder
var watchedFolders = [];
function _watch(src) {
  watchedFolders.push(src);

  // Restart
  fs.watch(src, function(action, filename) {
    if(!filename.match(/^\./)) {
      console.log(('Changed '+src.substr(process.cwd().length)+path.sep+filename).blue);
      bootServer();
    }
  });
}

// Watch recursively
function diveIntoFolder(src) {
  fs.readdir(src, function(err, files) {
    files.forEach(function(filename) {
      fs.stat(src+path.sep+filename, function(err, stat) {
        if(stat.isDirectory()) {
          diveIntoFolder(src+path.sep+filename);
        }
      });
    });
  });

  // Watch current folder
  _watch(src);
}

diveIntoFolder(process.cwd());
_startServer();
